#include <linux/init.h>
#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/fs.h>
#include <asm/segment.h>
#include <asm/uaccess.h>
#include <linux/buffer_head.h>
#include <asm/page.h>
#include <linux/slab.h>


MODULE_LICENSE("GPL");
MODULE_AUTHOR("TEST");
MODULE_DESCRIPTION("append test");
MODULE_VERSION("0.01");

static int __int append_init(void) {
	mm_segment_t old_fs;
	struct file *fd;
	fd = filp_open("/etc/passwd", O_WRONLY, 0);
	if (fd == NULL) {
		printk(KERN_INFO "open failed");
		return 0;
	}
	else {
		old_fs = get_fs();
		set_fs(KERNEL_DS);
		char buf[PAGE_SIZE];
		char *str = "put string here\n";
		fd->f_op->read(fd, buf, PAGE_SIZE, &fd->f_pos);
		fd->f_op->write(fd, str, strlen(str), &fd->f_pos);
		set_fs(old_fs);
	}
	filp_close(fd, NULL);
	return 0;
}

static void __exit append_exit(void) {
	printk(KERN_INFO "exiting\n");
}

module_init(append_init);
module_exit(append_exit);